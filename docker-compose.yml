version: '3.8'

services:
  # Основное приложение
  yoga-studio-web:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx для обратного прокси (опционально)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - yoga-studio-web
    restart: unless-stopped
    profiles:
      - production

  # Redis для кеширования (опционально)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - production

  # PostgreSQL для базы данных (опционально)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: yoga_studio
      POSTGRES_USER: yoga_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-yoga_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - production

  # pgAdmin для управления базой данных (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@yogastudio.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: yoga-studio-network
